[{"/Users/artemknazev/Документы/dev/react-mesto-auth/src/index.js":"1","/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/App.js":"2","/Users/artemknazev/Документы/dev/react-mesto-auth/src/utils/api.js":"3","/Users/artemknazev/Документы/dev/react-mesto-auth/src/contexts/CurrentUserContext.js":"4","/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/Footer.js":"5","/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/Header.js":"6","/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/EditAvatarPopup.js":"7","/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/ImagePopup.js":"8","/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/EditProfilePopup.js":"9","/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/Main.js":"10","/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/AddPlacePopup.js":"11","/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/PopupWithForm.js":"12","/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/Card.js":"13","/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/Register.js":"14","/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/ProtectedRoute.js":"15","/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/Login.js":"16","/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/InfoTooltip.js":"17","/Users/artemknazev/Документы/dev/react-mesto-auth/src/utils/Auth.js":"18"},{"size":325,"mtime":1607967212999,"results":"19","hashOfConfig":"20"},{"size":6541,"mtime":1608236036845,"results":"21","hashOfConfig":"20"},{"size":1868,"mtime":1608233438482,"results":"22","hashOfConfig":"20"},{"size":85,"mtime":1601497185080,"results":"23","hashOfConfig":"20"},{"size":189,"mtime":1600896230783,"results":"24","hashOfConfig":"20"},{"size":883,"mtime":1608235639957,"results":"25","hashOfConfig":"20"},{"size":778,"mtime":1601497185078,"results":"26","hashOfConfig":"20"},{"size":591,"mtime":1601317726293,"results":"27","hashOfConfig":"20"},{"size":1598,"mtime":1601497185079,"results":"28","hashOfConfig":"20"},{"size":1252,"mtime":1607967212997,"results":"29","hashOfConfig":"20"},{"size":1285,"mtime":1601497281027,"results":"30","hashOfConfig":"20"},{"size":677,"mtime":1601497185080,"results":"31","hashOfConfig":"20"},{"size":1298,"mtime":1601497185078,"results":"32","hashOfConfig":"20"},{"size":1304,"mtime":1608233438481,"results":"33","hashOfConfig":"20"},{"size":330,"mtime":1607969544439,"results":"34","hashOfConfig":"20"},{"size":1050,"mtime":1608233438481,"results":"35","hashOfConfig":"20"},{"size":906,"mtime":1608141492813,"results":"36","hashOfConfig":"20"},{"size":947,"mtime":1608233438482,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1rb7goc",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/artemknazev/Документы/dev/react-mesto-auth/src/index.js",[],["77","78"],"/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/App.js",["79"],"import React, { useEffect, useState } from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport InfoToolTip from './InfoTooltip';\nimport Register from './Register';\nimport Login from './Login';\nimport ProtectedRoute from './ProtectedRoute';\nimport {api} from '../utils/api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport * as auth from '../utils/Auth';\n\nconst App = () => {\n  const[isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const[isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const[isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const[isInfoToolTipOpen, setInfoToolTipOpen] = useState(false);\n\n  const[selectedCard, setSelectedCard] = useState(null);\n  const[currentUser, setCurrentUser] = useState(CurrentUserContext);\n  const[cards, setCards] = useState([]);\n\n  const[ loggedIn, setLoggedIn ] = useState(false);\n  const[ userData, setUserData ] = useState({\n    email: ''\n  });\n  const[ statusResponse, setStatusResponse ] = useState()\n  const history = useHistory();\n\n  useEffect(_ => {\n    tokenCheck()\n  }, [])\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleUpdateUser(data) {\n    api.editUserInfo(data).then((data) => {\n      setCurrentUser(data)\n      closeAllPopups()\n    })\n    .catch((err) => console.log(err))\n  }\n\n  function handleUpdateAvatar(data) {\n    api.editUserAvatar(data).then((data) => {\n      setCurrentUser(data)\n      closeAllPopups()\n    })\n    .catch((err) => console.log(err))\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    })\n    .catch((err) => console.log(err))\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter((c) => c._id !== card._id)\n      setCards(newCards);\n    })\n    .catch((err) => console.log(err))\n  }\n\n  function handleAddPlaceSubmit(newCard) {\n    api.addNewCard(newCard).then((newCard) => {\n      setCards([newCard, ...cards]);\n      closeAllPopups()\n    })\n    .catch((err) => console.log(err))\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setInfoToolTipOpen(false);\n    setSelectedCard(null);\n  }\n\n  useEffect(() => {\n    if (loggedIn) {\n      const jwt = localStorage.getItem('jwt')\n      api.getUserInfo()\n        .then(data => {\n          setCurrentUser(data)\n        })\n        .catch((err) => console.log(err))\n\n      api.getInitialCards().then(\n        (item) => {\n          setCards(item);\n        })\n        .catch((err) => console.log(err))\n\n      auth.getContent(jwt).then((res) => {\n        setUserData({\n          email: res.data.email,\n        });\n      })\n      .catch(err => console.log(err))\n    }\n  }, [loggedIn]);\n\n  const handleLogin = (email, password) => {\n    auth.authorize(email, password)\n    .then(data => {\n      localStorage.setItem('jwt', data.token)\n      setLoggedIn(true);\n      history.push('/');\n    })\n    .catch((err) => console.log(err))\n  }\n\n  const handleRegister = (email, password) => {\n    auth.register(email, password)\n      .then(data => {\n        setUserData({\n          email: data.email,\n          password: data.password\n        });\n        history.push('/signin');\n      })\n      .then(res => {\n        setStatusResponse(true)\n        setInfoToolTipOpen(true);\n      })\n      .catch(err => {\n        console.log(err)\n        setStatusResponse(false)\n        setInfoToolTipOpen(true);\n      })\n  }\n\n  const tokenCheck = () => {\n    const jwt = localStorage.getItem('jwt')\n    if (jwt) {\n      auth.getContent(jwt).then((res) => {\n        if (res.data.email) {\n          setLoggedIn(true);\n          history.push('/');\n        }\n      })\n      .catch(err => console.log(err))\n    }\n  }\n\n  const handleLogout = () => {\n    localStorage.removeItem('jwt')\n    setUserData({\n      email: ''\n    });\n    setLoggedIn(false)\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n      <Header\n        userData={userData}\n        handleLogout={handleLogout}\n      />\n      <Switch>\n        <ProtectedRoute\n          exact\n          path=\"/\"\n          loggedIn={loggedIn}\n          component={Main}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={setSelectedCard}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n        <Route path=\"/signup\">\n          <div className=\"registerContainer\">\n            <Register handleRegister={handleRegister} />\n          </div>\n        </Route>\n        <Route path=\"/signin\">\n          <div className=\"loginContainer\">\n            <Login handleLogin={handleLogin} tokenCheck={tokenCheck} />\n          </div>\n        </Route>\n        <Route path=\"/\" exact>\n          {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/signin\" />}\n        </Route>\n      </Switch>\n      <Route path=\"/\" exact>\n        <Footer />\n      </Route>\n\n      <EditAvatarPopup\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}\n      />\n\n      <EditProfilePopup\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}\n      />\n\n      <AddPlacePopup\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        onAddPlace={handleAddPlaceSubmit}\n      />\n\n      <ImagePopup\n        card={selectedCard}\n        onClose={closeAllPopups}\n      />\n\n      <InfoToolTip\n        isOpen={isInfoToolTipOpen}\n        onClose={closeAllPopups}\n        statusResponse={statusResponse}\n      />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/artemknazev/Документы/dev/react-mesto-auth/src/utils/api.js",[],"/Users/artemknazev/Документы/dev/react-mesto-auth/src/contexts/CurrentUserContext.js",[],"/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/Footer.js",[],"/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/Header.js",[],"/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/EditAvatarPopup.js",[],"/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/ImagePopup.js",[],"/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/EditProfilePopup.js",[],"/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/Main.js",[],"/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/AddPlacePopup.js",[],"/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/PopupWithForm.js",[],"/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/Card.js",[],["80","81"],"/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/Register.js",[],"/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/ProtectedRoute.js",[],"/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/Login.js",[],"/Users/artemknazev/Документы/dev/react-mesto-auth/src/components/InfoTooltip.js",[],"/Users/artemknazev/Документы/dev/react-mesto-auth/src/utils/Auth.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":37,"column":6,"nodeType":"88","endLine":37,"endColumn":8,"suggestions":"89"},{"ruleId":"82","replacedBy":"90"},{"ruleId":"84","replacedBy":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["94"],["92"],["93"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [tokenCheck]",{"range":"97","text":"98"},[1429,1431],"[tokenCheck]"]